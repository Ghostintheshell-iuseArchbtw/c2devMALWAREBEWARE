#import socket

# Configuration
HOST = '127.0.0.1'  # Local host
PORT = 9999          # Port to listen on
CONTROL_FILE = 'control.txt'  # Path to control file

def start_server():
    """Start the command-and-control server."""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
        server_socket.bind((HOST, PORT))
        server_socket.listen()

        print(f"Command-and-Control server started on {HOST}:{PORT}")

        while True:
            conn, addr = server_socket.accept()
            with conn:
                print(f"Connected by {addr}")
                data = conn.recv(1024).decode()
                if data == 'CHECK':
                    # Check if control file exists
                    if os.path.isfile(CONTROL_FILE):
                        conn.sendall(b'STOP')
                    else:
                        conn.sendall(b'STATUS')
                else:
                    conn.sendall(b'UNKNOWN COMMAND')

if __name__ == "__main__":
    start_server()
import socket

# Configuration
HOST = '127.0.0.1'  # Local host
PORT = 9999          # Port to listen on
CONTROL_FILE = 'control.txt'  # Path to control file

def start_server():
    """Start the command-and-control server."""
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as server_socket:
        server_socket.bind((HOST, PORT))
        server_socket.listen()

        print(f"Command-and-Control server started on {HOST}:{PORT}")

        while True:
            conn, addr = server_socket.accept()
            with conn:
                print(f"Connected by {addr}")
                data = conn.recv(1024).decode()
                if data == 'CHECK':
                    # Check if control file exists
                    if os.path.isfile(CONTROL_FILE):
                        conn.sendall(b'STOP')
                    else:
                        conn.sendall(b'STATUS')
                else:
                    conn.sendall(b'UNKNOWN COMMAND')

#if __name__ == "__main__":
#   start_server()

