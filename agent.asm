section .data
    nn_inputs dw 4
    nn_hidden dw 10
    nn_outputs dw 2
    weights times (nn_inputs * nn_hidden + nn_hidden * nn_outputs) dd 0.0

section .bss
    agent_pos resq 2
    agent_vel resq 2
    agent_acc resq 2

section .text
    global main

main:
    ; Create neural network
    mov eax, [nn_inputs]
    mov ebx, [nn_hidden]
    mov ecx, [nn_outputs]
    mov edx, weights
    call init_weights

    ; Create agent
    mov eax, agent_pos
    mov ebx, agent_vel
    mov ecx, agent_acc
    call init_agent

    ; Run simulation
    mov ecx, 1000
loop_simulation:
    call update_agent
    loop loop_simulation

    ; Exit
    mov eax, 1
    xor ebx, ebx
    int 0x80

; Initialize neural network weights
init_weights:
    mov esi, edx
    mov ecx, [nn_inputs]
    mov ebx, [nn_hidden]
    add ebx, [nn_outputs]
mul_weights:
    fldz
    fstp qword [esi]
    add esi, 8
    loop mul_weights
    ret

; Initialize agent
init_agent:
    mov qword [eax], 0.0
    mov qword [eax + 8], 0.0
    mov qword [ebx], 0.0
    mov qword [ebx + 8], 0.0
    mov qword [ecx], 0.0
    mov qword [ecx + 8], 0.0
    ret

; Update agent state
update_agent:
    ; Get inputs from environment
    mov eax, agent_pos
    mov ebx, agent_vel
    mov ecx, agent_acc
    mov edx, weights
    call forward_pass

    ; Update acceleration
    mov qword [ecx], xmm0
    mov qword [ecx + 8], xmm1

    ; Update velocity and position
    mov eax, [ebx]
    add eax, [ecx]
    mov [ebx], eax
    mov eax, [eax + 8]
    add eax, [ecx + 8]
    mov [ebx + 8], eax
    mov eax, [eax]
    add eax, [ebx]
    mov [eax], eax
    mov eax, [eax + 8]
    add eax, [ebx + 8]
    mov [eax + 8], eax
    ret

; Neural network forward pass
forward_pass:
    ; Calculate hidden layer activations
    mov ecx, [nn_hidden]
    mov ebx, [nn_inputs]
    mov edx, weights
    mov esi, agent_pos
mul_hidden:
    fldz
    mov eax, [esi]
    mul eax, [edx]
    add edx, 8
    add esi, 8
    fstp qword [ebx]
    loop mul_hidden

    ; Calculate output layer activations
    mov ecx, [nn_outputs]
    mov ebx, [nn_hidden]
    mov edx, weights
    mov esi, agent_pos
mul_output:
    fldz
    mov eax, [esi]
    mul eax, [edx]
    add edx, 8
    add esi, 8
    fstp qword [ebx]
    loop mul_output
    ret
