#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/sha.h>

#define MAX_AGENT_NAME_LENGTH 256
#define SHA256_DIGEST_LENGTH 32

void compute_sha256(const unsigned char *data, size_t data_len, unsigned char *hash) {
    SHA256_CTX sha256;
    SHA256_Init(&sha256);
    SHA256_Update(&sha256, data, data_len);
    SHA256_Final(hash, &sha256);
}

int main(int argc, char *argv[]) {
    if (argc != 2) {
        fprintf(stderr, "Usage: %s <master_aes_key>\n", argv[0]);
        return 1;
    }

    const char *master_aes_key = argv[1];
    unsigned char master_aes_key_hash[SHA256_DIGEST_LENGTH];

    // Compute SHA-256 hash of master AES key
    compute_sha256((const unsigned char *)master_aes_key, strlen(master_aes_key), master_aes_key_hash);

    // Print the hash (in hexadecimal format)
    printf("Master AES Key Hash: ");
    for (int i = 0; i < SHA256_DIGEST_LENGTH; ++i) {
        printf("%02x", master_aes_key_hash[i]);
    }
    printf("\n");

    return 0;
}
